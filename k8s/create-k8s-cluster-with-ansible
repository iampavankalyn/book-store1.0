- hosts: all
  tasks:
  - name: update all packages
    yum:
      name: "*"
      state: latest
    register: upout
    tags: upout
-  hosts: all
   tasks:
   - name: install containerd runtime for kubernetes
     shell: |
       yum install yum-utils -y
       yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
       yum install containerd.io -y
       CONTAINDERD_CONFIG_PATH=/etc/containerd/config.toml && \
       rm "${CONTAINDERD_CONFIG_PATH}" && \
       containerd config default > "${CONTAINDERD_CONFIG_PATH}" && \
       sed -i "s/SystemdCgroup = false/SystemdCgroup = true/g"  "${CONTAINDERD_CONFIG_PATH}"
       systemctl enable --now containerd && \
       systemctl restart containerd
-  hosts: all
   tasks:
   - name: add kubernetes repositiry
     shell: |
         cat <<EOF > /etc/yum.repos.d/kubernetes.repo
         [kubernetes]
          name=Kubernetes
         baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
         enabled=1
         gpgcheck=1
         repo_gpgcheck=1
         gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
         EOF
     register: lsout
     tags: lsout

- hosts: all
  tasks:
  - name: installing kubernetes components
    yum:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: latest
    delay: 200

  - name: enable kubelet
    service:
      name: kubelet
      enabled: true
      state: started

  - name: update ip tables
    shell: |
      modprobe br_netfilter
      cat <<EOF > /etc/sysctl.d/k8s.conf
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      EOF
      sysctl --system

  - name: disable SELinux and swap memory
    shell: |
      sudo setenforce 0
      sudo sed -i ‘s/^SELINUX=enforcing$/SELINUX=permissive/’ /etc/selinux/config
      sudo sed -i '/swap/d' /etc/fstab
      sudo swapoff -a
      echo 1 > /proc/sys/net/ipv4/ip_forward
      kubeadm reset --force

- hosts: master-node
  become: true
  tasks:
  - name: initiate the cluster
    shell: |
      sudo kubeadm init --pod-network-cidr=10.244.0.0/16
    delay: 300
    register: ps
  - debug: var=ps.stdout_lines
  - name: setup kube-config and pod-network
    shell: |
      mkdir -p $HOME/.kube
      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      sudo chown $(id -u):$(id -g) $HOME/.kube/config
      kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
  - name: print kubeadm join command
    command: "kubeadm token create --print-join-command"
    register: output

- hosts: worker-nodes
  become: true
  tasks:
  - name: join the worker nodes to cluster
    shell: |
      "{{ output.stdout }}"
